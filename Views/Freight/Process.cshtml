@model Intranet.Models.RequestFreight

@{
    ViewBag.Title = "Принять или отклонить заявку на выделение грузового транспорта";
    ViewBag.Active = "Freight";
}

@section scripts {
    @Content.Script("scrolldown.js", Url)
}

<fieldset>
    <legend>Принять\Отклонить заявку № @Model.RequestId, на выделение грузового транспорта

    @Html.Raw(Intranet.Utils.StatusChecker.Check(Model.Request.Status))

    </legend>
    <table class="table table-bordered">
         <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.DestinationPoint)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.DestinationPoint)
                </div>
            </td>
        </tr>
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.Request.RequestDate)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Request.RequestDate)
                </div>
            </td>
        </tr>
        
        <tr>
            <td style="width: 33%">
                Данные о характере груза
            </td>
            <td class="display-field">
                <table class="table table-bordered">
                    <tr>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().CargoName)
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().Weight)
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().Length)
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().Width)
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().Height)
                        </th>
                        <th>
                            @Html.LabelFor(model => model.RequestFreightCargoes.First().Volume)
                        </th>
                    </tr>
                    @Html.DisplayFor(model => model.RequestFreightCargoes)                 
                </table>               
            </td>
        </tr>
        <tr>
            <td>
                <div class="display-label">
                    <label>Файлы</label>
                </div>
            </td>
            <td>
                @foreach (Intranet.Models.RequestAttachment file in Model.Request.RequestAttachments.Where(a => a.IsDeleted != true).ToList())
                {
                    <div>
                    @Html.ActionLink(file.Name, "DownloadFile", new { fId = file.Id })
                    </div>
                }
            </td>
        </tr>
        
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.VehicleType)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.VehicleType)
                </div>
            </td>
        </tr>         
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.Request.CustomerId)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Request.v_RequestCustomer.CustomerName)
                </div>
            </td>
        </tr>      

        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.OrderNumber)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.OrderNumber)
                </div>
            </td>
        </tr>
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.LoadingType)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.LoadingType)
                </div>
            </td>
        </tr>
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.LoadingAddress)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.LoadingAddress)
                </div>
            </td>
        </tr>
        <tr>
            <td style="width: 33%">
                <div class="display-label">
                    @Html.LabelFor(model => model.Responsible)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.DisplayFor(model => model.Responsible)
                </div>
            </td>
        </tr>        
    </table>
</fieldset>
    <table style="width: 100%">
        <tr>
            <td>
                <div class="pull-right muted nomargin createdby">
                    Запись создана @Html.DisplayFor(model => model.Request.PublishDate) пользователем @Html.DisplayFor(model => model.Request.UserFio)</div>
            </td>
        </tr>
        <tr>
            <td>
                @Html.Partial("_AcceptingBlock", Model.Request)
            </td>
        </tr>
    </table>

