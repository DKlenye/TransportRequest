@model Intranet.Models.RequestCrane

@{   
    ViewBag.Title = "Редактирование заявки на выделение грузоподъемного крана";
    ViewBag.Active = "Crane";
    string errorMessage = ViewBag.ErrorMessage;
}

@section scripts{
    @Content.Script("jquery.validate.unobtrusive.min.js", Url)
    @Content.Script("chosen.jquery.min.js", Url)
    @Content.Script("dropdownlist.js", Url)
}

@using (Html.BeginForm("Edit", "Crane", FormMethod.Post)) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Редактирование заявки № @Model.RequestId, на выделение грузоподъемного крана</legend>

        @Html.HiddenFor(model => model.RequestId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Request.RequestDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Request.RequestDate )
            @Html.ValidationMessageFor(model => model.Request.RequestDate)
        </div> 
        <table style="margin-bottom:10px">
            <tr>
                <td>
                    @Html.LabelFor(model => model.Request.CustomerId)
                    @*<div class="alert">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Внимание!</strong> Диспетчер не увидит вашу заявку, пока её не подпишет руководитель
                    </div>*@
                </td>
            </tr>
            <tr>
                <td>
                    @{
                        Intranet.Models.transportEntities _db = new Intranet.Models.transportEntities();
                        Dictionary<int, string> customers = new Dictionary<int, string>();
                        customers.Add(0, String.Empty);
                        foreach (var cust in _db.v_RequestCustomers.OrderBy(c => c.CustomerName).ToList())
                        {
                            customers.Add(cust.CustomerId, cust.CustomerName); 
                        }                        
                     }
                    @*@{
                        if (errorMessage != String.Empty)
                        {
                            <div style="color: red">
                            @errorMessage
                            </div>
                        }            
                    }*@
                    @Html.DropDownListFor(model => model.Request.CustomerId, new SelectList(customers, "Key", "Value"), new { @class = "span7 chzn-select", data_placeholder="Выберите наименование заказчика..."})                    
                </td>
            </tr>
        </table>      

        <div class="editor-label">
            @Html.LabelFor(model => model.LicenceNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.LicenceNumber, new { @class = "span7" })
            @Html.ValidationMessageFor(model => model.LicenceNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.WorkPlace)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.WorkPlace, new { @class = "span7"})
            @Html.ValidationMessageFor(model => model.WorkPlace)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.WorkObject)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.WorkObject, new { @class = "span7"})
            @Html.ValidationMessageFor(model => model.WorkObject)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.WorkType)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.WorkType, new { @class = "span7"})
            @Html.ValidationMessageFor(model => model.WorkType)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.CraneType)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CraneType, new { @class = "span7"})
            @Html.ValidationMessageFor(model => model.CraneType)
        </div>  

        <div id="lep">
        <label class="checkbox">
            @Html.EditorFor(model => model.PowerLineExists) Наличие ЛЭП на месте работы
        </label>
        </div>

        <div id="lepPowerPermission">
        <div class="editor-label">
            @Html.LabelFor(model => model.PowerPermission)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.PowerPermission, new { @class = "span7" })
            @Html.ValidationMessageFor(model => model.PowerPermission)
        </div>
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Responsible)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Responsible, new { @class = "span7" })
            @Html.ValidationMessageFor(model => model.Responsible)
        </div>

        <div class="editor-label" style="margin-top:10px">
            Данные о стропальщиках
        </div>
        <div class="breadcrumb">
            <div id="slinger_container">
                   <div>
            <table>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().Office)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().FIO)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().CertificateNumber)
                    </th>
                    <th style="width:150px;">
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().DateKnowledge)
                    </th>                    
                    <th>
                    </th>
                </tr>
                @Html.EditorFor(model => model.RequestCraneSlingers) 
                @*<tr class="slingerRow">
                    <td>
                        <div class="editor-field">
                            <input id="RequestCraneSlingers_0_SlingerId" name="RequestCraneSlingers[0].SlingerId" type="hidden" value='' />
                            <input id="RequestCraneSlingers_0_Office" name="RequestCraneSlingers[0].Office" type="text" value='' style="width:200px" />                            
                        </div>                        
                    </td>
                    <td>
                        <div class="editor-field">
                            <input id="RequestCraneSlingers_0_FIO" name="RequestCraneSlingers[0].FIO" type="text" style="width:250px" />                                                        
                        </div>                        
                    </td>
                     <td>
                        <div class="editor-field">
                            <input id="RequestCraneSlingers_0_CertificateNumber" name="RequestCraneSlingers[0].CertificateNumber" type="text" style="width:150px" />                                                                                    
                        </div>                        
                    </td>
                    <td>
                        <div class="editor-field">                            
                            <input id="RequestCraneSlingers_0_DateKnowledge" name="RequestCraneSlingers[0].DateKnowledge" type="text" value="" class="knowledgedate lastSlingerInput" style="width:150px" />                            
                            <input id="RequestCraneSlingers_0__IsDeleted" name="RequestCraneSlingers[0].IsDeleted" type="hidden" value="False">
                        </div>                        
                    </td>                                      
                    <td>
                        <div id="first-row-btn">
                        </div>
                    </td>
                </tr>*@
            </table>
                       </div>
                </div>
            <div>
            @Html.ActionLink("Добавить стропальщика", "AddSlingerRow", null, new { id = "addSlingerRow", @class = "btn btn-mini" })
            </div>
        </div>
      

        <label class="checkbox">
            @Html.EditorFor(model => model.ProjectExists) Наличие проекта или технологии производства работ
        </label>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.ResponsibleOrder)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ResponsibleOrder, new { @class = "span7" })
            @Html.ValidationMessageFor(model => model.ResponsibleOrder)
        </div> 

        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CustomerName, new { @class = "span7" })
            @Html.ValidationMessageFor(model => model.CustomerName)
        </div> 

       <table>
            <tr>
                <td>Отправить заявку на подпись
                    <div class="alert">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong>Внимание!</strong> Диспетчер не увидит вашу заявку, пока её не подпишет руководитель
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @{
                        
                        Dictionary<int, string> approvers = new Dictionary<int, string>();
                        approvers.Add(0, String.Empty);
                        foreach (var apr in _db.RequestApprovers.OrderBy(a => a.Employee.LastName).ToList())
                        {                            
                            approvers.Add(apr.EmployeeId, apr.Employee.Fio + ", " + apr.Employee.Office); 
                        }                        
                     }
                    @{
                        if (errorMessage != String.Empty)
                        {
                            <div style="color: red">
                            @errorMessage
                            </div>
                        }            
                    }
                    @Html.DropDownListFor(model => model.Request.ApproverEmployeeId, new SelectList(approvers, "Key", "Value"), new { @class = "span7 chzn-select", data_placeholder="Выберите руководителя, который подпишет вашу заявку..."})                    
                </td>
            </tr>
        </table>

    </fieldset>
    <br />
    <div class="form-actions nomargin">
        <table style="width: 100%">
            <tr>
                <td>
                    <input type="submit" value="Сохранить изменения" class="btn btn-success" />
                </td>
                <td>
                    @Html.ActionLink("Вернуться к списку", "Index", "Home", null, new { @class = "btn btn-primary pull-right" })
                </td>
            </tr>
        </table>
    </div>
}
