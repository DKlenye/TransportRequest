@using Intranet.Models
@model Intranet.Models.RequestCrane



<div class="editor-label">
    @Html.LabelFor(model => model.Request.RequestDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Request.RequestDate)
    @Html.ValidationMessageFor(model => model.Request.RequestDate)
</div>
<table style="margin-bottom:10px">
    <tr>
        <td>
            @Html.LabelFor(model => model.Request.CustomerId)
            @*<div class="alert">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <strong>Внимание!</strong> Диспетчер не увидит вашу заявку, пока её не подпишет руководитель
                </div>*@
        </td>
    </tr>
    <tr>
        <td>
            @{
                Intranet.Models.transportEntities _db = new Intranet.Models.transportEntities();
                Dictionary<int, string> customers = new Dictionary<int, string>();
                customers.Add(0, String.Empty);
                foreach (var cust in _db.v_RequestCustomers.Where(c => c.SHZ == "Д4").OrderBy(c => c.CustomerName).ToList())
                {
                    customers.Add(cust.CustomerId, cust.CustomerName);
                }
            }
            @*@{
                    if (errorMessage != String.Empty)
                    {
                        <div style="color: red">
                        @errorMessage
                        </div>
                    }
                }*@
            @Html.DropDownListFor(model => model.Request.CustomerId, new SelectList(customers, "Key", "Value"), new { @class = "span7 chzn-select", data_placeholder = "Выберите наименование заказчика..." })
        </td>
    </tr>
</table>

<div class="editor-label">
    @Html.LabelFor(model => model.LicenceNumber)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.LicenceNumber, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.LicenceNumber)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.WorkPlace)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.WorkPlace, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.WorkPlace)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.WorkObject)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.WorkObject, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.WorkObject)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.WorkType)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.WorkType, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.WorkType)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CraneType)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.CraneType, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.CraneType)
</div>

<div id="lep">
    <label class="checkbox">
        @Html.EditorFor(model => model.PowerLineExists) Наличие ЛЭП на месте работы
    </label>
</div>

<div id="lepPowerPermission">
    <div class="editor-label">
        @Html.LabelFor(model => model.PowerPermission)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.PowerPermission, new { @class = "span7" })
        @Html.ValidationMessageFor(model => model.PowerPermission)
    </div>
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Responsible)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.Responsible, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.Responsible)
</div>

<div class="editor-label" style="margin-top:10px">
    Данные о стропальщиках
</div>
<div class="breadcrumb">
    <div id="slinger_container">
        <div>
            <table>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().Office)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().FIO)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().CertificateNumber)
                    </th>
                    <th style="width:150px;">
                        @Html.LabelFor(model => model.RequestCraneSlingers.First().DateKnowledge)
                    </th>
                    <th>
                    </th>
                </tr>
                @Html.EditorFor(model => model.RequestCraneSlingers)

            </table>
        </div>
    </div>
    <div>
        @Html.ActionLink("Добавить стропальщика", "AddSlingerRow", null, new { id = "addSlingerRow", @class = "btn btn-mini" })
    </div>
</div>


<label class="checkbox">
    @Html.EditorFor(model => model.ProjectExists) Наличие проекта или технологии производства работ
</label>

<div class="editor-label">
    @Html.LabelFor(model => model.ResponsibleOrder)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.ResponsibleOrder, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.ResponsibleOrder)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CustomerName)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.CustomerName, new { @class = "span7" })
    @Html.ValidationMessageFor(model => model.CustomerName)
</div> 